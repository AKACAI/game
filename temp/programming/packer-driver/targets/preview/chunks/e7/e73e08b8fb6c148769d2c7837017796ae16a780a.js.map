{"version":3,"sources":["file:///D:/cocos_projects/physics_education_game/assets/scripts/manager/game_manager/GameManager.ts"],"names":["_decorator","director","PhysicsSystem2D","game","Game","Singleton","ObjectVisualTag","InputManager","MapManager","InteractManager","ccclass","timeScale","_calculateDT","now","performance","_deltaTime","_startTime","DEBUG_DT_THRESHOLD","frameTime","GameState","GameManager","init","_gameState","NotInGame","_interacterManager","_gameRoot","getScene","getChildByName","_gameObjects","tag","console","log","nextInitManager","setNextInitManager","gameState","gameRoot","start","Ongoing","instance","enable","getInstance","enterMap","setTimeScale","value","pause","i","length","object","Pause","resume","update","deltaTime","mouseParam","getMouseData","objectInTag","interactWithObject","applyForce","addObject","visualTag","push","removeObject"],"mappings":"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","sourcesContent":["import { _decorator, director, Vec2, Node, PhysicsSystem2D, game, Game } from \"cc\";\nimport { Singleton } from \"../../common/Singleton\";\nimport { ObjectBase, ObjectVisualTag } from \"../../modules/game/ObjectBase\";\nimport { GameTipManager } from \"../../modules/ui/game_tip/GameTipManager\";\nimport { InputManager, MouseParam } from \"../InputManager\";\nimport { MapManager } from \"../map_manager/MapManager\";\nimport { IPreInit } from \"../../common/IPreInit\";\nimport { InteractManager } from \"./InteractManager\";\nconst { ccclass } = _decorator;\n\nlet timeScale = 1;\n//@ts-ignore\ngame._calculateDT = function (now: number) {\n    if (!now) now = performance.now();\n    this._deltaTime = now > this._startTime ? (now - this._startTime) / 1000 : 0;\n    if (this._deltaTime > Game.DEBUG_DT_THRESHOLD) {\n        this._deltaTime = this.frameTime / 1000;\n    }\n    this._startTime = now;\n    return this._deltaTime * timeScale;\n};\n\nexport enum GameState {\n    NotInGame,\n    Pause,\n    Ongoing,\n}\n\n\n@ccclass('GameManager')\nexport class GameManager extends Singleton {\n    private _gameState: GameState;\n    private _interacterManager: InteractManager;\n\n    // 应该引入一个ObjectManager的东西\n    private _gameRoot: Node;\n    // private _gameObjects: ObjectBase[][];   // 物体的输入有优先级的区分，0级为最优先，依次递减\n    private _gameObjects: { [tag: number]: ObjectBase[] };\n\n    public init() {\n        this._gameState = GameState.NotInGame;\n        this._interacterManager = new InteractManager(this);\n        this._gameRoot = director.getScene().getChildByName(\"main_canvas\").getChildByName(\"game_root\");\n        this._gameObjects = {};\n        for (let tag in ObjectVisualTag) {\n            this._gameObjects[tag] = [];\n        }\n\n        console.log(\"GameManager初始化完成!\");\n        if (this.nextInitManager) {\n            this.nextInitManager.init();\n        }\n    }\n\n    public nextInitManager: IPreInit;\n    public setNextInitManager(nextInitManager: IPreInit): void {\n        this.nextInitManager = nextInitManager;\n    }\n\n    public get gameState() {\n        return this._gameState;\n    }\n\n    public get gameRoot() {\n        return this._gameRoot;\n    }\n\n    public start() {\n        this._gameState = GameState.Ongoing;\n        timeScale = 1;\n        PhysicsSystem2D.instance.enable = true;\n        MapManager.getInstance().enterMap(\"100001\");\n    }\n\n    public setTimeScale(value) {\n        timeScale = value < 0 ? 0 : value > 2 ? 2 : value;\n    }\n\n    public pause() {\n        if (this._gameState != GameState.Ongoing) {\n            return;\n        }\n        for (const tag in this._gameObjects) {\n            for (let i = 0; i < this._gameObjects[tag].length; i++) {\n                const object = this._gameObjects[tag][i];\n                if (!object) {\n                    continue;\n                }\n                object.pause();\n            }\n        }\n        this._gameState = GameState.Pause;\n    }\n\n    public resume() {\n        if (this._gameState != GameState.Pause) {\n            return;\n        }\n        for (const tag in this._gameObjects) {\n            for (let i = 0; i < this._gameObjects[tag].length; i++) {\n                const object = this._gameObjects[tag][i];\n                if (!object) {\n                    continue;\n                }\n                object.resume();\n            }\n        }\n        this._gameState = GameState.Ongoing;\n    }\n\n    public update(deltaTime: number) {\n        let mouseParam = InputManager.getInstance().getMouseData();\n\n        for (const tag in this._gameObjects) {\n            const objectInTag = this._gameObjects[tag];\n            for (let i = 0; i < objectInTag.length; i++) {\n                const object = objectInTag[i];\n\n                this._interacterManager.interactWithObject(object, mouseParam);\n                object.applyForce();\n            }\n        }\n        // if (showTipObject) {\n        //     let objectInfo = showTipObject.getObjectInfo();\n        //     GameTipManager.getInstance().showTip(objectInfo.id, objectInfo.name, objectInfo.tipData);\n        //     GameTipManager.getInstance().moveTip(mouseParam.mousePos);\n        // } else {\n        //     GameTipManager.getInstance().hideTip();\n        // }\n    }\n\n    public addObject(object: ObjectBase, visualTag: ObjectVisualTag) {\n        this._gameObjects[visualTag].push(object);\n    }\n\n    public removeObject(object: ObjectBase) {\n        //this._gameObjects.\n    }\n}"]}