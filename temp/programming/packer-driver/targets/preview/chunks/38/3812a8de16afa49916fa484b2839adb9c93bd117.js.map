{"version":3,"sources":["file:///D:/cocos_projects/physics_education_game/assets/scripts/modules/game/ObjectBase.ts"],"names":["_decorator","Component","Color","Vec2","Graphics","PolygonCollider2D","RigidBody2D","ERigidBody2DType","Phy_Group","LogManager","ccclass","property","ObjectBase","defaultLineWidth","defaultLineColor","BLACK","defaultFillColor","WHITE","create","_graphics","node","getComponent","addComponent","_collider","_rigidbody","init","objectType","info","objectParam","vertices","length","console","log","_objectType","_localVertices","_name","name","_phyGroup","phyGroup","_isStatic","isStatic","_lineWidth","lineWidth","_lineColor","lineColor","_fillColor","fillColor","_tipData","initPolygon","initCollider","initDynamic","reset","color","moveTo","x","y","i","lineTo","close","stroke","fill","points","group","GAMEOBJECT","type","Static","Dynamic","_curSpeed","ZERO","linearVelocity","setTipData","data","getTipData","getType","getObjectParam","contains","pointPos","crossings","nodePos","getWorldPosition","forEach","vertex","push","curPos","nextPos","slope","cond1","cond2","above","mouseOnObject","isMouseOn","param","pause","resume","wakeUp"],"mappings":"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","sourcesContent":["import { _decorator, Component, Color, Vec2, Graphics, PolygonCollider2D, RigidBody2D, ERigidBody2DType } from \"cc\";\r\nimport { Phy_Group } from \"../../manager/game_manager/GameDefinition\";\r\nimport { MouseParam } from \"../../manager/game_manager/GameManager\";\r\nimport { GameTipData } from \"../ui/game_tip/GameTipItem\";\r\nimport { ObjectType } from \"./ObjectFactory\";\r\nimport LogManager from \"../../utils/LogManager\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ObjectBase')\r\nexport class ObjectBase extends Component {\r\n    protected readonly defaultLineWidth: number = 2;\r\n    protected readonly defaultLineColor: Color = Color.BLACK;\r\n    protected readonly defaultFillColor: Color = Color.WHITE;\r\n\r\n    protected _objectType: ObjectType;\r\n    protected _localVertices: Vec2[];\r\n    protected _phyGroup: Phy_Group;\r\n    protected _isStatic: boolean;\r\n\r\n    protected _name: string;\r\n    protected _lineWidth: number;\r\n    protected _lineColor: Color;\r\n    protected _fillColor: Color;\r\n    protected _tipData: GameTipData[];\r\n\r\n    protected _graphics: Graphics;\r\n    protected _collider: PolygonCollider2D;\r\n    protected _rigidbody: RigidBody2D;\r\n\r\n    protected _curSpeed: Vec2;\r\n\r\n    public create(): void {\r\n        this._graphics = this.node.getComponent(Graphics);\r\n        if (!this._graphics) {\r\n            this._graphics = this.node.addComponent(Graphics);\r\n        }\r\n        this._collider = this.node.getComponent(PolygonCollider2D);\r\n        if (!this._collider) {\r\n            this._collider = this.node.addComponent(PolygonCollider2D);\r\n        }\r\n        this._rigidbody = this.node.getComponent(RigidBody2D);\r\n        if (!this._rigidbody) {\r\n            this._rigidbody = this.node.addComponent(RigidBody2D);\r\n        }\r\n    }\r\n\r\n    public init(objectType: ObjectType, info: any, objectParam: ObjectParam) {\r\n        let vertices = info as Vec2[];\r\n        if (!vertices || vertices.length < 3) {\r\n            console.log(\"生成的物体的顶点数不能小于3\");\r\n            return;\r\n        }\r\n        if (!objectParam) {\r\n            return\r\n        }\r\n        this._graphics = this.node.getComponent(Graphics);\r\n        if (!this._graphics) {\r\n            this._graphics = this.node.addComponent(Graphics);\r\n        }\r\n        this._collider = this.node.getComponent(PolygonCollider2D);\r\n        if (!this._collider) {\r\n            this._collider = this.node.addComponent(PolygonCollider2D);\r\n        }\r\n        this._rigidbody = this.node.getComponent(RigidBody2D);\r\n        if (!this._rigidbody) {\r\n            this._rigidbody = this.node.addComponent(RigidBody2D);\r\n        }\r\n\r\n        this._objectType = objectType;\r\n        this._localVertices = vertices;\r\n        this._name = objectParam.name;\r\n        this._phyGroup = objectParam.phyGroup;\r\n        this._isStatic = objectParam.isStatic;\r\n        this._lineWidth = objectParam.lineWidth ? objectParam.lineWidth : this.defaultLineWidth;\r\n        this._lineColor = objectParam.lineColor ? objectParam.lineColor : this.defaultLineColor;\r\n        this._fillColor = objectParam.fillColor ? objectParam.fillColor : this.defaultFillColor;\r\n        this._tipData = [];\r\n\r\n        this.initPolygon();\r\n        this.initCollider();\r\n        this.initDynamic();\r\n        this.reset();\r\n    }\r\n\r\n    protected initPolygon() {\r\n        this._graphics.lineWidth = this._lineWidth;\r\n        this._graphics.color = this._lineColor;\r\n        this._graphics.fillColor = this._fillColor;\r\n\r\n        let vertices = this._localVertices;\r\n        this._graphics.moveTo(vertices[0].x, vertices[0].y);\r\n        for (let i = 1; i < vertices.length; i++) {\r\n            this._graphics.lineTo(vertices[i].x, vertices[i].y);\r\n        }\r\n        this._graphics.close();\r\n        this._graphics.stroke();\r\n        this._graphics.fill();\r\n    }\r\n\r\n    protected initCollider() {\r\n        this._collider.points = this._localVertices;\r\n        if (this._phyGroup) {\r\n            this._collider.group = this._phyGroup;\r\n        }\r\n        else {\r\n            this._collider.group = Phy_Group.GAMEOBJECT;\r\n        }\r\n    }\r\n\r\n    protected initDynamic() {\r\n        if (this._phyGroup) {\r\n            this._rigidbody.group = this._phyGroup;\r\n        }\r\n        else {\r\n            this._rigidbody.group = Phy_Group.GAMEOBJECT;\r\n        }\r\n        if (this._isStatic) {\r\n            this._rigidbody.type = ERigidBody2DType.Static;\r\n        }\r\n        else {\r\n            this._rigidbody.type = ERigidBody2DType.Dynamic;\r\n        }\r\n    }\r\n\r\n    protected reset() {\r\n        this._curSpeed = Vec2.ZERO;\r\n        if (this._rigidbody) {\r\n            this._rigidbody.linearVelocity = this._curSpeed;\r\n        }\r\n    }\r\n\r\n    public setTipData(data: GameTipData[]) {\r\n        this._tipData = data;\r\n    }\r\n\r\n    public getTipData(): GameTipData[] {\r\n        return this._tipData;\r\n    }\r\n\r\n    public getType(): ObjectType {\r\n        return this._objectType;\r\n    }\r\n\r\n    public getObjectParam(): ObjectParam {\r\n        return {\r\n            name: this._name,\r\n            lineWidth: this._lineWidth,\r\n            lineColor: this._lineColor,\r\n            fillColor: this._fillColor,\r\n        }\r\n    }\r\n\r\n    // 碰撞体内是否包含点\r\n    // https://blog.csdn.net/zsjzliziyang/article/details/108813349\r\n    public contains(pointPos: Vec2): boolean {\r\n        let crossings = 0;\r\n\r\n        let nodePos = this.node.getWorldPosition();\r\n        let vertices = [];\r\n        this._localVertices.forEach(vertex => {\r\n            vertices.push(new Vec2(vertex.x + nodePos.x, vertex.y + nodePos.y));\r\n        })\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            let curPos = vertices[i];\r\n            let nextPos = (i + 1 == vertices.length) ? vertices[0] : vertices[i + 1];\r\n            let slope = (nextPos.y - curPos.y) / (nextPos.x - curPos.x);\r\n            let cond1 = (curPos.x <= pointPos.x) && (nextPos.x > pointPos.x);\r\n            let cond2 = (nextPos.x <= pointPos.x) && (curPos.x > pointPos.x);\r\n            let above = (pointPos.y < slope * (pointPos.x - curPos.x) + curPos.y);\r\n            if ((cond1 || cond2) && above) {\r\n                crossings++;\r\n            }\r\n        }\r\n        return (crossings % 2 != 0);\r\n    }\r\n\r\n    public mouseOnObject(isMouseOn: boolean, param: MouseParam) {\r\n\r\n    }\r\n\r\n    public pause() {\r\n        LogManager.log(\"AAAAAAAAAA\", this._rigidbody.linearVelocity)\r\n        if (this._rigidbody) {\r\n            this._rigidbody.linearVelocity = Vec2.ZERO;\r\n        }\r\n    }\r\n\r\n    public resume() {\r\n        this._rigidbody.wakeUp();\r\n        LogManager.log(\"BBBBBBBBBB\", this._rigidbody.linearVelocity)\r\n        if (this._rigidbody) {\r\n            this._rigidbody.linearVelocity = this._curSpeed;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface ObjectParam {\r\n    name: string,\r\n    phyGroup?: Phy_Group,\r\n    isStatic?: boolean,\r\n    lineWidth?: number,\r\n    lineColor?: Color,\r\n    fillColor?: Color,\r\n}"]}