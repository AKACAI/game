{"version":3,"sources":["file:///D:/cocos_projects/physics_education_game/assets/scripts/manager/ui_manager/UIPanel.ts"],"names":["_decorator","Component","UILayer","UIManager","ccclass","property","UIPanel","_layer","alert","_resDestroyType","ResDestroyType","delayRelease","_panelName","init","bindFunc","disbindFunc","open","node","active","close","closeBySelf","getInstance","closePanel","dispose","layer","resDestroyType","panelName","value"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,O,iBAAAA,O;AAASC,MAAAA,S,iBAAAA,S;;;;;;;;;OACZ;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;yBAGjBM,O,WADZF,OAAO,CAAC,SAAD,C,gBAAR,MACaE,OADb,SAC6BL,SAD7B,CACuC;AAAA;AAAA;AAAA,eACzBM,MADyB,GACP;AAAA;AAAA,kCAAQC,KADD;AAAA,eAEzBC,eAFyB,GAESC,cAAc,CAACC,YAFxB;AAAA,eAGzBC,UAHyB,GAGJ,EAHI;AAAA;;AAK5BC,QAAAA,IAAI,GAAG,CAEb;;AAEMC,QAAAA,QAAQ,GAAG,CAEjB;;AAEMC,QAAAA,WAAW,GAAG,CACjB;AACH;;AAEMC,QAAAA,IAAI,GAAG;AACV,eAAKC,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACH;;AAGMC,QAAAA,KAAK,GAAG;AACX,eAAKF,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;;AAESE,QAAAA,WAAW,GAAG;AACpB;AAAA;AAAA,sCAAUC,WAAV,GAAwBC,UAAxB,CAAmC,KAAKV,UAAxC;AACH;;AAEMW,QAAAA,OAAO,GAAG,CAEhB;;AAEe,YAALC,KAAK,GAAG;AACf,iBAAO,KAAKjB,MAAZ;AACH;;AACwB,YAAdkB,cAAc,GAAG;AACxB,iBAAO,KAAKhB,eAAZ;AACH;;AAEmB,YAATiB,SAAS,GAAG;AACnB,iBAAO,KAAKd,UAAZ;AACH;;AACmB,YAATc,SAAS,CAACC,KAAD,EAAgB;AAChC,eAAKf,UAAL,GAAkBe,KAAlB;AACH;;AA9CkC,O;;gCAiD3BjB,c,0BAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;eAAAA,c","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { UILayer, UIManager } from './UIManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('UIPanel')\r\nexport class UIPanel extends Component {\r\n    protected _layer: UILayer = UILayer.alert;\r\n    protected _resDestroyType: ResDestroyType = ResDestroyType.delayRelease;\r\n    protected _panelName: string = \"\";\r\n\r\n    public init() {\r\n\r\n    }\r\n\r\n    public bindFunc() {\r\n\r\n    }\r\n\r\n    public disbindFunc() {\r\n        //EventManager.getInstance().removeListener();\r\n    }\r\n\r\n    public open() {\r\n        this.node.active = true;\r\n    }\r\n\r\n\r\n    public close() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    protected closeBySelf() {\r\n        UIManager.getInstance().closePanel(this._panelName);\r\n    }\r\n\r\n    public dispose() {\r\n\r\n    }\r\n\r\n    public get layer() {\r\n        return this._layer;\r\n    }\r\n    public get resDestroyType() {\r\n        return this._resDestroyType;\r\n    }\r\n\r\n    public get panelName() {\r\n        return this._panelName;\r\n    }\r\n    public set panelName(value: string) {\r\n        this._panelName = value;\r\n    }\r\n}\r\n\r\nexport enum ResDestroyType {\r\n    directlyRelease,\r\n    delayRelease,\r\n    neverRelease\r\n}"]}