{"version":3,"sources":["file:///D:/cocos_projects/physics_education_game/assets/scripts/modules/ui/game_start_menu/GameTipView.ts"],"names":["_decorator","Label","UITransform","instantiate","ResManager","LoadType","UILayer","UIPanel","GameTipItem","ccclass","property","GameTipView","itemCreateCount","init","_layer","game","bg_tip","node","getChildByName","lb_name","getComponent","node_tips","getInstance","loadAsset","PrefableRes","prefab","itemPrefab","i","createTip","open","close","dispose","destroyTips","showTip","name","data","active","length","tipsData","string","node_height","curPosY","maxShowCount","Math","min","children","curTipNode","curTipItemCpt","setData","setPosition","item_height","contentSize","y","node_width","x","setContentSize","hideTips","tipItemCpt","addChild","item","destroy"],"mappings":"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","sourcesContent":["import { _decorator, Label, Prefab, UITransform, instantiate, Node } from \"cc\";\r\nimport { ResManager, LoadType } from \"../../../manager/ResManager\";\r\nimport { UILayer } from \"../../../manager/ui_manager/UIManager\";\r\nimport { UIPanel } from \"../../../manager/ui_manager/UIPanel\";\r\nimport { GameTipData, GameTipItem } from \"./GameTipItem\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameTipView')\r\nexport class GameTipView extends UIPanel {\r\n    private tipsData: GameTipData[];\r\n\r\n    private lb_name: Label;\r\n    private bg_tip: Node;\r\n    private node_tips: Node;\r\n    private itemPrefab: Prefab;\r\n    private readonly itemCreateCount = 5;\r\n\r\n    public init() {\r\n        this._layer = UILayer.game;\r\n        this.bg_tip = this.node.getChildByName(\"bg_tip\");\r\n        this.lb_name = this.node.getChildByName(\"lb_name\").getComponent(Label);\r\n        this.node_tips = this.node.getChildByName(\"node_tips\");\r\n        ResManager.getInstance().loadAsset(\"game_tip_item\", LoadType.PrefableRes, \"game_tip\", (prefab) => {\r\n            this.itemPrefab = prefab;\r\n            for (let i = 0; i < this.itemCreateCount; i++) {\r\n                this.createTip()\r\n            }\r\n        }, null, this);\r\n    }\r\n\r\n    public open() {\r\n\r\n    }\r\n\r\n    public close() {\r\n\r\n    }\r\n\r\n    public dispose() {\r\n        this.destroyTips();\r\n    }\r\n\r\n    public showTip(name?: string, data?: GameTipData[]) {\r\n        this.node.active = true;\r\n        if (!data || data.length == 0) {\r\n            this.node_tips.active = false;\r\n            return;\r\n        }\r\n        this.node_tips.active = true;\r\n        this.tipsData = data;\r\n        this.lb_name.string = name;\r\n        let node_height = 45;\r\n\r\n        let curPosY = 0;\r\n        let maxShowCount = Math.min(data.length, this.node_tips.children.length);\r\n        for (let i = 0; i < maxShowCount; i++) {\r\n            let curTipNode = this.node_tips.children[i];\r\n            let curTipItemCpt = curTipNode.getComponent(GameTipItem);\r\n            if (curTipItemCpt) {\r\n                curTipItemCpt.setData(data[i]);\r\n                curTipNode.setPosition(0, curPosY, 0);\r\n                curTipNode.active = true;\r\n                let item_height = curTipItemCpt.getComponent(UITransform).contentSize.y;\r\n                curPosY -= item_height;\r\n                node_height += item_height;\r\n            }\r\n        }\r\n        for (let i = maxShowCount; i < this.node_tips.children.length; i++) {\r\n            this.node_tips.children[i].active = false;\r\n        }\r\n        let node_width = this.node.getComponent(UITransform).contentSize.x;\r\n        this.node.getComponent(UITransform).setContentSize(node_width, node_height);\r\n        this.bg_tip.getComponent(UITransform).setContentSize(node_width, node_height);\r\n    }\r\n\r\n    public hideTips() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    private createTip(): Node {\r\n        let node = instantiate(this.itemPrefab);\r\n        let tipItemCpt = node.getComponent(GameTipItem);\r\n        if (tipItemCpt) {\r\n            tipItemCpt.init();\r\n            this.node_tips.addChild(node);\r\n            node.active = false;\r\n            return node;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private destroyTips() {\r\n        for (let i = this.node_tips.children.length - 1; i >= 0; i++) {\r\n            let item = this.node.children[i];\r\n            item.destroy();\r\n        }\r\n    }\r\n}"]}