{"version":3,"sources":["file:///D:/cocos_projects/physics_education_game/assets/scripts/manager/ui_manager/UIPanel.ts"],"names":["_decorator","Component","UILayer","UIManager","ccclass","property","UIPanel","_layer","alert_no_bg","_resDestroyType","ResDestroyType","delayRelease","panelName","bundleName","init","open","node","active","close","closeBySelf","getInstance","closePanel","dispose","layer","resDestroyType"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,O,iBAAAA,O;AAASC,MAAAA,S,iBAAAA,S;;;;;;;;;OAEZ;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;yBAGjBM,O,WADZF,OAAO,CAAC,SAAD,C,gBAAR,MACaE,OADb,SAC6BL,SAD7B,CACuC;AAAA;AAAA;AAAA,eACzBM,MADyB,GACP;AAAA;AAAA,kCAAQC,WADD;AAAA,eAEzBC,eAFyB,GAESC,cAAc,CAACC,YAFxB;AAAA,eAG5BC,SAH4B,GAGR,EAHQ;AAAA,eAI5BC,UAJ4B,GAIP,EAJO;AAAA;;AAMnC;AAEOC,QAAAA,IAAI,GAAG,CAEb;;AAEMC,QAAAA,IAAI,GAAG;AACV,eAAKC,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACH;;AAGMC,QAAAA,KAAK,GAAG;AACX,eAAKF,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;;AAESE,QAAAA,WAAW,GAAG;AACpB;AAAA;AAAA,sCAAUC,WAAV,GAAwBC,UAAxB,CAAmC,KAAKT,SAAxC;AACH;;AAEMU,QAAAA,OAAO,GAAG,CAEhB;;AAEe,YAALC,KAAK,GAAG;AACf,iBAAO,KAAKhB,MAAZ;AACH;;AACwB,YAAdiB,cAAc,GAAG;AACxB,iBAAO,KAAKf,eAAZ;AACH,SAlCkC,CAoCnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA5CmC,O;;gCA+C3BC,c,0BAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;eAAAA,c","sourcesContent":["import { _decorator, Component, Node, Prefab } from 'cc';\nimport { UILayer, UIManager } from './UIManager';\nimport { LoadType, ResManager } from '../ResManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIPanel')\nexport class UIPanel extends Component {\n    protected _layer: UILayer = UILayer.alert_no_bg;\n    protected _resDestroyType: ResDestroyType = ResDestroyType.delayRelease;\n    public panelName: string = \"\";\n    public bundleName: string = \"\";\n\n    //protected preloadResDict: { [type: number]: string[] }; //type是LoadType\n\n    public init() {\n\n    }\n\n    public open() {\n        this.node.active = true;\n    }\n\n\n    public close() {\n        this.node.active = false;\n    }\n\n    protected closeBySelf() {\n        UIManager.getInstance().closePanel(this.panelName);\n    }\n\n    public dispose() {\n\n    }\n\n    public get layer() {\n        return this._layer;\n    }\n    public get resDestroyType() {\n        return this._resDestroyType;\n    }\n\n    // /**在init之前调用，增加 */\n    // protected addLoadPrefab(path: string, bundleName?: string) {\n    //     this.preloadResDict[LoadType.PrefableRes].push();\n    //     if (bundleName) {\n    //         ResManager.getInstance().loadAsset(path, LoadType.PrefableRes, bundleName, (prefab: Prefab) => {\n    //             this.modeItemPrefab = prefab;\n    //         });\n    //     }\n    // }\n}\n\nexport enum ResDestroyType {\n    directlyRelease,\n    delayRelease,\n    neverRelease\n}"]}