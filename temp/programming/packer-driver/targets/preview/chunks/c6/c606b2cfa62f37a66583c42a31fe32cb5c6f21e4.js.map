{"version":3,"sources":["file:///D:/cocos_projects/physics_education_game/assets/scripts/manager/EventManager.ts"],"names":["EventManager","addEvent","eventName","listener","target","listenerArr","_eventDict","i","length","event_obj","push","removeEvent","splice","dispatchEvent","data","apply","removeAllEvent","hasEvent","dispose"],"mappings":"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","sourcesContent":["\r\ninterface EventData {\r\n    eventName: string;\r\n    listener: any;\r\n    target: any;\r\n}\r\n\r\nexport default class EventManager{\r\n    private static _eventDict = {}\r\n\r\n    // 添加事件监听\r\n    static addEvent(eventName: string, listener: any, target: any){\r\n        if(listener == null){\r\n            return;\r\n        }\r\n\r\n        let listenerArr = EventManager._eventDict[eventName];\r\n        if (listenerArr == null){\r\n            listenerArr = [];\r\n            EventManager._eventDict[eventName] = listenerArr;\r\n        }\r\n\r\n        for (let i = 0; i < listenerArr.length; i++) {\r\n            if (listenerArr[i].listener === listener && listenerArr[i].target === target){\r\n                return;\r\n            }\r\n        }\r\n\r\n        //todo,优化为对象池\r\n        let event_obj = <EventData>{};\r\n        event_obj.eventName = eventName;\r\n        event_obj.listener = listener;\r\n        event_obj.target = target;\r\n\r\n        listenerArr.push(event_obj);\r\n    }\r\n\r\n    // 移除事件监听\r\n    static removeEvent(eventName: string, listener: any, target?:any){\r\n        let listenerArr = EventManager._eventDict[eventName];\r\n        if (listenerArr==null) {\r\n            return;\r\n        }\r\n\r\n        if (!target){\r\n            //这段代码最终删掉\r\n            for (var i = 0; i < listenerArr.length; i++) {\r\n                if (listenerArr[i].listener == listener){\r\n                    listenerArr.splice(i,1)\r\n                    // console.log(\"删除=\",eventName,listenerArr)\r\n                    break;\r\n                }\r\n            }\r\n        }else{\r\n            for (var i = 0; i < listenerArr.length; i++) {\r\n                if (listenerArr[i].listener === listener && listenerArr[i].target === target) {\r\n                    listenerArr.splice(i, 1);\r\n                    // console.log(\"删除=\", eventName, listenerArr)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 抛出对应事件\r\n    static dispatchEvent(eventName: string, data?: any){\r\n        let listenerArr = EventManager._eventDict[eventName];\r\n        if (listenerArr == null) {\r\n            return\r\n        }\r\n\r\n        let event_obj = null;\r\n        for (var i = 0; i < listenerArr.length; i++) {\r\n            event_obj = listenerArr[i];\r\n            if(event_obj.target != null){\r\n                event_obj.listener.apply(event_obj.target, [data]);\r\n                // event_obj.listener(event_obj.target, data)\r\n            }else{\r\n                event_obj.listener(data)\r\n            }\r\n        }\r\n    }\r\n\r\n    // 移除一个eventName下所有监听的事件\r\n    static removeAllEvent(eventName: string){\r\n        EventManager._eventDict[eventName] = null;\r\n    }\r\n\r\n    // 是否存在某个事件\r\n    static hasEvent(eventName: string, listener: any){\r\n        let listenerArr = EventManager._eventDict[eventName];\r\n        if (listenerArr==null) {\r\n            return false;\r\n        }\r\n\r\n        for (var i = 0; i < listenerArr.length; i++) {\r\n            if(listenerArr[i] == listener){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static dispose(){\r\n        EventManager._eventDict = null;\r\n        EventManager._eventDict = {};\r\n    }\r\n\r\n}"]}