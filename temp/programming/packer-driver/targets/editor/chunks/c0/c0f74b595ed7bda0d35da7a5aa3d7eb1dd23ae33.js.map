{"version":3,"sources":["file:///D:/cocos_projects/physics_education_game/assets/scripts/modules/ui/game_start_ui/LevelSelectView.ts"],"names":["_decorator","instantiate","tween","Vec3","UIPanel","UILayer","LogManager","NodeHelper","LoadType","ResManager","LevelSelectModeItem","Display","ccclass","property","LevelSelectView","node_center","undefined","node_mode_items","btn_close","btn_tip","node_block_click_mask","modeItems","isInAnim","modeItemPath","tweenShowAnimData","animTime","init","_layer","normal","node","getChildByName","setNodeSizeFullScreen","addListener","open","initUI","active","setNodeClickEvent","closeBySelf","modeData","name","bg_path","clickCb","showOneMode","getInstance","loadAsset","PrefableRes","bundleName","prefab","error","panelName","screenWidth","getWindowSize","x","spacingWithSceenX","spacingX","length","startPosX","i","addChild","setPosX","itemCpt","getComponent","setData","push","index","order","item","setSiblingIndex","to","position","scale","call","start","close","dispose"],"mappings":"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","sourcesContent":["import { _decorator, instantiate, Node, Prefab, tween, UIOpacity, Vec2, Vec3 } from \"cc\";\nimport { UIPanel } from \"../../../manager/ui_manager/UIPanel\";\nimport { UILayer } from \"../../../manager/ui_manager/UIManager\";\nimport { GameManager, GameState } from \"../../../manager/game_manager/GameManager\";\nimport LogManager from \"../../../utils/LogManager\";\nimport NodeHelper from \"../../../common/NodeHelper\";\nimport { LoadType, ResManager } from \"../../../manager/ResManager\";\nimport { ISetDataModeItem, LevelSelectModeItem } from \"./LevelSelectModeItem\";\nimport { Display } from \"../../../common/Display\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('LevelSelectView')\nexport class LevelSelectView extends UIPanel {\n    private node_center: Node = undefined;\n    private node_mode_items: Node = undefined;\n\n    private btn_close: Node = undefined;\n    private btn_tip: Node = undefined;\n    private node_block_click_mask: Node = undefined;\n\n    private modeItems: LevelSelectModeItem[] = undefined;\n\n\n    private isInAnim: boolean = undefined;\n    private readonly modeItemPath: string = \"level_select_mode_item\";\n    private readonly tweenShowAnimData = {\n        animTime: 0.7,\n    }\n    public init() {\n        super.init();\n        this._layer = UILayer.normal;\n\n        this.node_center = this.node.getChildByName(\"node_center\");\n        this.node_mode_items = this.node_center.getChildByName(\"node_mode_items\");\n        this.btn_close = this.node_center.getChildByName(\"btn_close\");\n        this.btn_tip = this.node_center.getChildByName(\"btn_tip\");\n        this.node_block_click_mask = this.node_center.getChildByName(\"node_block_click_mask\");\n        NodeHelper.setNodeSizeFullScreen(this.node_block_click_mask);\n        this.addListener();\n    }\n\n    public open() {\n        super.open();\n        this.initUI();\n        this.isInAnim = false;\n        this.node_block_click_mask.active = false;\n    }\n\n    private addListener() {\n        NodeHelper.setNodeClickEvent(this.btn_close, () => {\n            this.closeBySelf();\n        }, this);\n\n        NodeHelper.setNodeClickEvent(this.btn_tip, () => {\n\n        }, this);\n    }\n\n    private initUI() {\n        this.modeItems = [];\n        let modeData: ISetDataModeItem[] = [{\n            name: \"保卫小车\",\n            bg_path: \"\",\n            clickCb: () => {\n                this.showOneMode(0);\n            },\n        }, {\n            name: \"保卫小车2\",\n            bg_path: \"\",\n            clickCb: () => {\n                this.showOneMode(1);\n            },\n        }, {\n            name: \"保卫小车3\",\n            bg_path: \"\",\n            clickCb: () => {\n                this.showOneMode(2);\n            },\n        }]\n        ResManager.getInstance().loadAsset(this.modeItemPath, LoadType.PrefableRes, this.bundleName, (prefab: Prefab) => {\n            if (!this.node_mode_items || !this.modeItems) {\n                LogManager.error(this.panelName, \"已经正在销毁了！！\");\n                return;\n            }\n            let screenWidth: number = Display.getInstance().getWindowSize().x;\n            let spacingWithSceenX: number = 200;\n            let spacingX: number = (screenWidth - spacingWithSceenX * 2) / (modeData.length - 1);\n            let startPosX: number = -(screenWidth - spacingWithSceenX * 2) / 2;\n            for (let i = 0; i < modeData.length; i++) {\n                let node = instantiate(prefab);\n                this.node_mode_items.addChild(node);\n                NodeHelper.setPosX(node, startPosX + spacingX * i);\n                let itemCpt: LevelSelectModeItem = node.getComponent(LevelSelectModeItem);\n                if (itemCpt) {\n                    itemCpt.init();\n                    itemCpt.setData(modeData[i]);\n                }\n                this.modeItems.push(itemCpt);\n            }\n        })\n    }\n\n    private showOneMode(index: number) {\n        if (index >= this.modeItems.length) {\n            return;\n        }\n        if (this.isInAnim) {\n            return;\n        }\n        this.isInAnim = true;\n        this.node_block_click_mask.active = true;\n        let order: number = 1;      // 用来标记当前是第几个小模式\n        for (let i = 0; i < this.modeItems.length; i++) {\n            const item = this.modeItems[i];\n            if (i == index) {\n                item.node.setSiblingIndex(this.modeItems.length - 1);\n                tween(item.node)\n                    .to(this.tweenShowAnimData.animTime, { position: new Vec3(-300, -40), scale: new Vec3(1.2, 1.2, 1) })\n                    .call(() => {\n                        this.isInAnim = false;\n                        this.node_block_click_mask.active = false;\n                    })\n                    .start();\n            } else {\n                item.node.setSiblingIndex(this.modeItems.length - 1 - order);\n                tween(item.node)\n                    .to(this.tweenShowAnimData.animTime, { position: new Vec3(-300 - 50 * order, -60), scale: new Vec3(1, 1, 1) })\n                    .start();\n                order++;\n            }\n        }\n    }\n\n    public close() {\n        super.close();\n    }\n\n    public dispose() {\n        super.dispose();\n        if (this.modeItems) {\n            for (let i = 0; i < this.modeItems.length; i++) {\n                this.modeItems[i]?.dispose();\n            }\n        }\n    }\n}"]}