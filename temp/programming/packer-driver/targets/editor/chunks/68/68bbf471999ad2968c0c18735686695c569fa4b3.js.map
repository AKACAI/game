{"version":3,"sources":["file:///E:/education_game/game/assets/scripts/modules/game/ObjectBase.ts"],"names":["_decorator","Component","Color","Vec2","Graphics","PolygonCollider2D","RigidBody2D","ERigidBody2DType","Vec3","v2","Phy_Group","InteractSpace","ccclass","property","ObjectBase","defaultForceFrom","defaultLineWidth","defaultLineColor","BLACK","defaultFillColor","WHITE","_markForceId","forceId","create","_graphics","node","getComponent","addComponent","_collider","_rigidbody","setObject","objectId","objectType","shapeParam","objectParam","physicsParam","_objectInfo","id","name","type","vertices","length","console","log","lineWidth","lineColor","fillColor","initPolygon","_interactSpace","_localVertices","initCollider","phyGroup","initDynamic","isStatic","reset","data","strokeColor","moveTo","x","y","i","lineTo","close","stroke","fill","points","group","GAMEOBJECT","enabled","sensor","friction","Static","Dynamic","_curSpeed","ZERO","_curForce","linearVelocity","addForce","force","from","removeForce","getForce","applyForce","forceItem","applyForceToCenter","setSpeed","speed","setTipData","tipData","getObjectInfo","getLocalVertices","getInteractSpace","contains","pointPos","crossings","nodePos","getWorldPosition","forEach","vertex","rotation","getEulerAngles","angle","Math","PI","z","cos","sin","push","curPos","nextPos","slope","cond1","cond2","above","onMouseEnterSpace","param","onMouseLeaveSpace","pause","resume","ForceType","ObjectVisualTag"],"mappings":"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","sourcesContent":["import { _decorator, Component, Color, Vec2, Graphics, PolygonCollider2D, RigidBody2D, ERigidBody2DType, Vec3, v2 } from \"cc\";\nimport { Phy_Group } from \"../../manager/game_manager/GameDefinition\";\nimport { GameTipData } from \"../ui/game_tip/GameTipItem\";\nimport { ObjectType } from \"./ObjectFactory\";\nimport { InteractSpace } from \"../../manager/game_manager/InteractSpace\";\nimport { MouseParam } from \"../../manager/InputManager\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('ObjectBase')\nexport class ObjectBase extends Component {\n    protected readonly defaultForceFrom: string = \"from\";\n    protected readonly defaultLineWidth: number = 2;\n    protected readonly defaultLineColor: Color = Color.BLACK;\n    protected readonly defaultFillColor: Color = Color.WHITE;\n\n    protected _localVertices: Vec2[];\n\n    protected _objectInfo: ObjectInfo;\n\n    protected _graphics: Graphics;\n    protected _collider: PolygonCollider2D;\n    protected _rigidbody: RigidBody2D;\n    protected _interactSpace: InteractSpace;\n\n    private _markForceId: number = 0;\n\n    /**当前速度 */\n    protected _curSpeed: Vec2;\n    /**当前受力 */\n    protected _curForce: { [id: number]: { from: string, force: Vec2, type: ForceType } };\n\n    public create(): void {\n        this._graphics = this.node.getComponent(Graphics);\n        if (!this._graphics) {\n            this._graphics = this.node.addComponent(Graphics);\n        }\n        this._collider = this.node.getComponent(PolygonCollider2D);\n        if (!this._collider) {\n            this._collider = this.node.addComponent(PolygonCollider2D);\n        }\n        this._rigidbody = this.node.getComponent(RigidBody2D);\n        if (!this._rigidbody) {\n            this._rigidbody = this.node.addComponent(RigidBody2D);\n        }\n    }\n\n    public setObject(objectId: number, objectType: ObjectType, shapeParam: any, objectParam: ObjectParam, physicsParam: PhysicsParam) {\n        this._objectInfo = {\n            id: objectId,\n            name: objectParam.name,\n            type: objectType,\n        };\n        const vertices = shapeParam as Vec2[];\n        if (!vertices || vertices.length < 3) {\n            console.log(\"生成的物体的顶点数不能小于3\");\n            return;\n        }\n        if (!objectParam) {\n            return;\n        }\n\n        let lineWidth = objectParam.lineWidth ? objectParam.lineWidth : this.defaultLineWidth;\n        let lineColor = objectParam.lineColor ? objectParam.lineColor : this.defaultLineColor;\n        let fillColor = objectParam.fillColor ? objectParam.fillColor : this.defaultFillColor;\n        this.initPolygon({ lineWidth: lineWidth, lineColor: lineColor, fillColor: fillColor, vertices: vertices });\n        this._interactSpace = new InteractSpace(this._localVertices);\n        this.initCollider({ phyGroup: objectParam.phyGroup, physicsParam: physicsParam });\n        this.initDynamic({ phyGroup: objectParam.phyGroup, isStatic: objectParam.isStatic });\n        this.reset();\n    }\n\n    protected initPolygon(data: { lineWidth: number, lineColor: Color, fillColor: Color, vertices: Vec2[] }) {\n        this._graphics.lineWidth = data.lineWidth;\n        this._graphics.strokeColor = data.lineColor;\n        this._graphics.fillColor = data.fillColor;\n\n        this._localVertices = data.vertices;\n        this._graphics.moveTo(this._localVertices[0].x, this._localVertices[0].y);\n        for (let i = 1; i < this._localVertices.length; i++) {\n            this._graphics.lineTo(this._localVertices[i].x, this._localVertices[i].y);\n        }\n        this._graphics.close();\n        this._graphics.stroke();\n        this._graphics.fill();\n\n    }\n\n    protected initCollider(data: { phyGroup: Phy_Group, physicsParam: PhysicsParam }) {\n        this._collider.points = this._localVertices;\n        this._collider.group = data.phyGroup ? data.phyGroup : Phy_Group.GAMEOBJECT;\n        this._collider.enabled = true;      // 激活碰撞体\n        this._collider.sensor = false;      // 不是触发器\n        this._collider.friction = data.physicsParam.friction;\n    }\n\n    protected initDynamic(data: { phyGroup: Phy_Group, isStatic: boolean }) {\n        this._rigidbody.group = data.phyGroup ? data.phyGroup : Phy_Group.GAMEOBJECT;\n        this._rigidbody.type = data.isStatic ? ERigidBody2DType.Static : ERigidBody2DType.Dynamic;\n    }\n\n    protected reset() {\n        this._curSpeed = Vec2.ZERO;\n        this._curForce = {};\n        if (this._rigidbody) {\n            this._rigidbody.linearVelocity = this._curSpeed;\n        }\n\n    }\n\n    /** 增加受力 */\n    public addForce(force: Vec2, type?: ForceType, from: string = this.defaultForceFrom): number {\n        if (!this._rigidbody) {\n            return;\n        }\n        let id = ++this._markForceId;\n        this._curForce[id] = { from: from, type: type, force: force };\n        return id;\n    }\n\n    public removeForce(forceId: number) {\n        delete this._curForce[forceId];\n    }\n\n    public getForce() {\n        return this._curForce;\n    }\n\n    /**对该物体运用身上受到的力 */\n    public applyForce() {\n        for (const id in this._curForce) {\n            const forceItem = this._curForce[id];\n            this._rigidbody.applyForceToCenter(forceItem.force, true);\n        }\n    }\n\n    /** 设置速度 */\n    public setSpeed(speed: Vec2) {\n        if (!this._rigidbody) {\n            return;\n        }\n        this._rigidbody.linearVelocity = speed;\n    }\n\n    public setTipData(data: GameTipData[]) {\n        this._objectInfo.tipData = data;\n    }\n\n    public getObjectInfo(): ObjectInfo {\n        return this._objectInfo;\n    }\n\n    public getLocalVertices(): Vec2[] {\n        return this._localVertices;\n    }\n\n    public getInteractSpace() {\n        return this._interactSpace;\n    }\n\n    // 碰撞体内是否包含点\n    // https://blog.csdn.net/zsjzliziyang/article/details/108813349\n    public contains(pointPos: Vec2): boolean {\n        let crossings = 0;\n\n        let nodePos = this.node.getWorldPosition();\n        let vertices = [];\n        this._localVertices.forEach(vertex => {\n            let rotation: Vec3 = new Vec3();\n            this.node.rotation.getEulerAngles(rotation);\n            let angle = -Math.PI * rotation.z / 180;\n            let x = vertex.x * Math.cos(angle) + vertex.y * Math.sin(angle);\n            let y = -vertex.x * Math.sin(angle) + vertex.y * Math.cos(angle);\n            vertices.push(new Vec2(x + nodePos.x, y + nodePos.y));\n        })\n        for (let i = 0; i < vertices.length; i++) {\n            let curPos = vertices[i];\n            let nextPos = (i + 1 == vertices.length) ? vertices[0] : vertices[i + 1];\n            let slope = (nextPos.y - curPos.y) / (nextPos.x - curPos.x);\n            let cond1 = (curPos.x <= pointPos.x) && (nextPos.x > pointPos.x);\n            let cond2 = (nextPos.x <= pointPos.x) && (curPos.x > pointPos.x);\n            let above = (pointPos.y < slope * (pointPos.x - curPos.x) + curPos.y);\n            if ((cond1 || cond2) && above) {\n                crossings++;\n            }\n        }\n        return (crossings % 2 != 0);\n    }\n\n    private forceId = 0;\n    public onMouseEnterSpace(param: MouseParam) {\n        this.forceId = this.addForce(v2(10, 0));\n    }\n\n    public onMouseLeaveSpace(param: MouseParam) {\n        this.removeForce(this.forceId);\n    }\n\n    public pause() {\n        if (this._rigidbody) {\n            this._curSpeed = this._rigidbody.linearVelocity;\n            this._rigidbody.linearVelocity = Vec2.ZERO;\n        }\n    }\n\n    public resume() {\n        if (this._rigidbody) {\n            this._rigidbody.linearVelocity = this._curSpeed;\n        }\n    }\n}\n\nexport interface ObjectParam {\n    name: string,\n    phyGroup?: Phy_Group,\n    isStatic?: boolean,\n    lineWidth?: number,\n    lineColor?: Color,\n    fillColor?: Color,\n}\n\nexport interface PhysicsParam {\n    friction: number,\n}\n\nexport enum ForceType {\n    /**无性质力 */\n    node = 1,\n    /**摩擦力 */\n    friction = 2,\n    /**弹力 */\n    elasticForce = 3\n}\n\nexport enum ObjectVisualTag {\n    background = 1,\n    middle = 2,\n    front = 3,\n}\n\nexport interface ObjectInfo {\n    id: number,\n    name: string,\n    type: ObjectType,\n    tipData?: GameTipData[],\n}"]}