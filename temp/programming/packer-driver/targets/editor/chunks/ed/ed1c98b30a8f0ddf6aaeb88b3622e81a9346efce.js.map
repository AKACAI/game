{"version":3,"sources":["file:///E:/education_game/game/assets/scripts/manager/game_manager/InteractManager.ts"],"names":["_decorator","Vec2","Vec3","ccclass","property","InteractSpace","constructor","localVertices","contains","pointPos","crossings","nodePos","objectBase","node","getWorldPosition","vertices","forEach","vertex","rotation","getEulerAngles","angle","Math","PI","z","x","cos","y","sin","push","i","length","curPos","nextPos","slope","cond1","cond2","above","onMouseEnterSpace","param","onMouseLeaveSpace"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec2, Vec3 } from 'cc';\r\nimport { ObjectBase } from '../../modules/game/ObjectBase';\r\nimport { MouseParam } from '../InputManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('InteractSpace')\r\nexport class InteractSpace {\r\n    private objectBase: ObjectBase;\r\n\r\n    private localVertices: Vec2[];\r\n\r\n    constructor(localVertices: Vec2[]) {\r\n        this.localVertices = localVertices;\r\n    }\r\n\r\n    // 碰撞体内是否包含点\r\n    // https://blog.csdn.net/zsjzliziyang/article/details/108813349\r\n    public contains(pointPos: Vec2): boolean {\r\n        let crossings = 0;\r\n\r\n        let nodePos = this.objectBase.node.getWorldPosition();\r\n        let vertices = [];\r\n        if (this.localVertices) {\r\n            this.localVertices.forEach(vertex => {\r\n                let rotation: Vec3 = new Vec3();\r\n                this.objectBase.node.rotation.getEulerAngles(rotation);\r\n                let angle = -Math.PI * rotation.z / 180;\r\n                let x = vertex.x * Math.cos(angle) + vertex.y * Math.sin(angle);\r\n                let y = -vertex.x * Math.sin(angle) + vertex.y * Math.cos(angle);\r\n                vertices.push(new Vec2(x + nodePos.x, y + nodePos.y));\r\n            })\r\n        }\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            let curPos = vertices[i];\r\n            let nextPos = (i + 1 == vertices.length) ? vertices[0] : vertices[i + 1];\r\n            let slope = (nextPos.y - curPos.y) / (nextPos.x - curPos.x);\r\n            let cond1 = (curPos.x <= pointPos.x) && (nextPos.x > pointPos.x);\r\n            let cond2 = (nextPos.x <= pointPos.x) && (curPos.x > pointPos.x);\r\n            let above = (pointPos.y < slope * (pointPos.x - curPos.x) + curPos.y);\r\n            if ((cond1 || cond2) && above) {\r\n                crossings++;\r\n            }\r\n        }\r\n        return (crossings % 2 != 0);\r\n    }\r\n\r\n    public onMouseEnterSpace(param: MouseParam) {\r\n\r\n    }\r\n\r\n    public onMouseLeaveSpace(param: MouseParam) {\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}