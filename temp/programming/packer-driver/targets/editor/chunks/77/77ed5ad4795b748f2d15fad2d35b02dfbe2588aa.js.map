{"version":3,"sources":["file:///D:/cocos_projects/physics_education_game/assets/scripts/manager/ui_manager/component/ComButton.ts"],"names":["_decorator","Component","NodeEventType","LogManager","Utils","ccclass","property","ComButton","eventDict","undefined","isInited","isMouseInButton","isButtonDown","clickBufferTime","scaleTarget","lastClickTime","isDoAnim","onLoad","init","onDestroy","removeAllEvent","node","on","MOUSE_DOWN","onClickStart","MOUSE_UP","onClick","cancelClick","MOUSE_ENTER","onMouseEnter","MOUSE_LEAVE","onMouseLeave","log","setScale","name","getCurTimeStamp","events","ButtonEventType","click","i","length","func","apply","target","params","addEvent","data","type","push","removeEvent","arr","splice","removeAllEventByType"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, NodeEventType } from 'cc';\r\nimport LogManager from '../../../utils/LogManager';\r\nimport Utils from '../../../utils/Utils';\r\nimport NodeHelper from '../../../common/NodeHelper';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ComButton')\r\nexport class ComButton extends Component {\r\n    private eventDict: { [type: number]: ButtonEventArgs[] } = undefined;\r\n\r\n    private isInited: boolean = false;\r\n\r\n    public onLoad(): void {\r\n        this.init(true);\r\n    }\r\n\r\n    public onDestroy(): void {\r\n        this.removeAllEvent();\r\n    }\r\n\r\n    private isMouseInButton: boolean = false;\r\n    private isButtonDown: boolean = false;\r\n    /** 两次点击的缓存时间*/\r\n    private readonly clickBufferTime = 250;\r\n    /** 点击后动画缩放比例 */\r\n    private readonly scaleTarget = 0.7;\r\n    private lastClickTime: number = 0;\r\n\r\n    private isDoAnim: boolean = false;\r\n\r\n    public init(isDoAnim: boolean = true) {\r\n        if (this.isInited) {\r\n            return;\r\n        }\r\n        this.isInited = true;\r\n        this.eventDict = {};\r\n        this.lastClickTime = 0;\r\n        this.isMouseInButton = false;\r\n        this.isButtonDown = false;\r\n        this.node.on(NodeEventType.MOUSE_DOWN, () => {\r\n            this.isButtonDown = true;\r\n            if (this.isMouseInButton) {\r\n                this.onClickStart();\r\n            }\r\n        }, this);\r\n\r\n        this.node.on(NodeEventType.MOUSE_UP, () => {\r\n            this.isButtonDown = false;\r\n            if (this.isMouseInButton) {\r\n                this.onClick();\r\n            } else {\r\n                this.cancelClick();\r\n            }\r\n        }, this);\r\n\r\n        this.node.on(NodeEventType.MOUSE_ENTER, () => {\r\n            this.isMouseInButton = true;\r\n            if (!this.isButtonDown) {\r\n                this.onMouseEnter();\r\n            }\r\n        }, this);\r\n\r\n        this.node.on(NodeEventType.MOUSE_LEAVE, () => {\r\n            this.isMouseInButton = false;\r\n            if (!this.isButtonDown) {\r\n                this.onMouseLeave();\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    private onClickStart() {\r\n        LogManager.log(\"onClickStart\");\r\n        if (this.isDoAnim) {\r\n            this.node.setScale(this.scaleTarget, this.scaleTarget, this.scaleTarget);\r\n        }\r\n    }\r\n\r\n    private cancelClick() {\r\n        LogManager.log(\"cancelClick\");\r\n        if (this.isDoAnim) {\r\n            this.node.setScale(1, 1, 1);\r\n        }\r\n    }\r\n\r\n    private onMouseEnter() {\r\n        LogManager.log(\"onMouseEnter\");\r\n\r\n    }\r\n\r\n    private onMouseLeave() {\r\n        LogManager.log(\"onMouseEnter\");\r\n\r\n    }\r\n\r\n    private onClick() {\r\n        LogManager.log(\"点击了按钮：\", this.node.name);\r\n        if (Utils.getCurTimeStamp() - this.lastClickTime > this.clickBufferTime) {\r\n            let events: ButtonEventArgs[] = this.eventDict[ButtonEventType.click];\r\n            if (events) {\r\n                for (let i = 0; i < events.length; i++) {\r\n                    events[i].func.apply(events[i].target, events[i].params);\r\n                }\r\n            }\r\n        } else {\r\n\r\n        }\r\n        this.lastClickTime = Utils.getCurTimeStamp();\r\n    }\r\n\r\n    public addEvent(data: ButtonEventArgs) {\r\n        if (!this.eventDict[data.type]) {\r\n            this.eventDict[data.type] = [];\r\n        }\r\n        this.eventDict[data.type].push(data);\r\n    }\r\n\r\n    public removeEvent(func: Function) {\r\n        for (let type in this.eventDict) {\r\n            let arr = this.eventDict[type];\r\n            if (!arr) {\r\n                continue;\r\n            }\r\n            for (let i = 0; i < arr.length; i++) {\r\n                if (arr[i].func == func) {\r\n                    arr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public removeAllEventByType(type: ButtonEventType) {\r\n        this.eventDict[type] = [];\r\n    }\r\n\r\n    public removeAllEvent() {\r\n        this.eventDict = {};\r\n    }\r\n}\r\n\r\nexport enum ButtonEventType {\r\n    click = 1,\r\n    doubleClick = 2,\r\n}\r\n\r\nexport interface ButtonEventArgs {\r\n    type: ButtonEventType,\r\n    func: Function,\r\n    target: any,\r\n    params: any,\r\n    clickAnim: boolean,\r\n}"]}